[package]
name = "workers"
version = "0.1.0"
license = "MIT OR Apache-2.0"
edition = "2024"
description = "A robust async PostgreSQL-backed background job processing system"
homepage = "https://github.com/mre/workers"
repository = "https://github.com/mre/workers"
keywords = ["background", "jobs", "queue", "postgresql", "async"]
categories = ["asynchronous", "database"]

[dependencies]
anyhow = "1.0"
sqlx = { version = "0.8", default-features = false, features = ["postgres", "runtime-tokio-rustls", "chrono", "json", "uuid", "derive", "migrate", "macros"] }
futures-util = "0.3"
sentry-core = { version = "0.42", features = ["client"] }
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
thiserror = "2.0"
tokio = { version = "1.47", features = ["rt", "time"] }
tracing = "0.1"
chrono = { version = "0.4", features = ["serde"] }
rand = "0.8"

[dev-dependencies]
claims = "0.8"
insta = { version = "1.43", features = ["json"] }
tokio = { version = "1.47", features = ["macros", "sync"] }
testcontainers = "0.23"
testcontainers-modules = { version = "0.11", features = ["postgres"] }
tracing-subscriber = { version = "0.3", features = ["env-filter"] }

[lints.rust]
unsafe_code = "forbid"
missing_docs = "deny"
missing_debug_implementations = "forbid"
missing_copy_implementations = "warn"
trivial_casts = "forbid"
trivial_numeric_casts = "forbid"
unused_allocation = "forbid"
unused_comparisons = "forbid"
unused_parens = "forbid"
while_true = "forbid"
unreachable_pub = "warn"

[lints.clippy]
# Correctness lints
all = { level = "warn", priority = -1 }
correctness = { level = "warn", priority = -1 }
suspicious = { level = "warn", priority = -1 }

# Style lints
style = { level = "warn", priority = -1 }
complexity = { level = "warn", priority = -1 }
perf = { level = "warn", priority = -1 }

# Specific strict lints
pedantic = { level = "warn", priority = -1 }
nursery = { level = "warn", priority = -1 }

# Individual lints that are particularly important
cargo_common_metadata = "forbid"
dbg_macro = "forbid"
todo = "forbid"
unimplemented = "forbid"
unwrap_used = "deny"
expect_used = "deny"
panic = "deny"
print_stdout = "forbid"
print_stderr = "forbid"
exit = "forbid"
mem_forget = "forbid"
fn_to_numeric_cast_any = "forbid"
lossy_float_literal = "forbid"
rest_pat_in_fully_bound_structs = "forbid"
verbose_file_reads = "forbid"
string_slice = "forbid"
indexing_slicing = "deny"

# Allow some pedantic lints that can be overly strict for library code
must_use_candidate = "allow"
missing_errors_doc = "allow"
missing_panics_doc = "allow"
module_name_repetitions = "allow"
return_self_not_must_use = "allow"
missing_const_for_fn = "allow"
option_if_let_else = "allow"
ignored_unit_patterns = "allow"
wildcard_imports = "allow"
redundant_pub_crate = "allow"
missing_fields_in_debug = "allow"

# Test-specific allows (will be handled in test files)
# These are allowed globally but tests should override with #![allow(...)]
